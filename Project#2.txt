<body></body>
<script src="http://gamingJS.com/Three.js"></script>
<script src="http://gamingJS.com/physi.js"></script>
<script src="http://gamingJS.com/ChromeFixes.js"></script>
<script src="http://gamingJS.com/Scoreboard.js"></script>
<script src="http://gamingJS.com/Mouse.js"></script>

<script>
  // Physics settings
  Physijs.scripts.ammo = 'http://gamingJS.com/ammo.js';
  Physijs.scripts.worker = 'http://gamingJS.com/physijs_worker.js';

  // This is where stuff in our game will happen:
  var scene = new Physijs.Scene({ fixedTimeStep: 2 / 60 });
  scene.setGravity(new THREE.Vector3( 0, -100, 0 ));

  // This is what sees the stuff:
  var width = window.innerWidth,
      height = window.innerHeight,
      aspect_ratio = width / height;
  //var camera = new THREE.PerspectiveCamera(75, aspect_ratio, 1, 10000);
   var camera = new THREE.OrthographicCamera(
     -width/2, width/2, height/2, -height/2, 1, 10000
   );

  camera.position.z = 500;
  scene.add(camera);

  // This will draw what the camera sees onto the screen:
  var renderer = new THREE.WebGLRenderer();
  renderer.setSize(window.innerWidth, window.innerHeight);
  document.body.appendChild(renderer.domElement);
  document.body.style.backgroundColor = '#9999aa';

  // ******** START CODING ON THE NEXT LINE ********
function makeBorder(x, y, w, h) {
  var border = new Physijs.Boxmesh(
    new THREE.CubeGeometry(w, h, 100),
    Physijs.createMaterial(
      new THREE.MeshBasicMaterial({color: 0x000000}), 0.2, 1.0
    ),
    0
  );
  border.position.set(x, y, 0);
  return border;
      
}
scene.add(makeBorder(width/-2, 0, 50, height));
scene.add(makeBorder(width/2, 0, 50, height));
scene.add(makeBorder(0, height/2, width, 50));
scene.add(makeBorder(0, height/-2, width, 50));

var avatar = new Physijs.ConvexMesh(
  
  new THREE.CylinderGeometry(30, 30, 5, 16),
  Physijs.createMaterial(
    
    new THREE.MeshBasicMaterial({color: 0xbb0000}), 0.2, 0.5
    )
  );
avatar.rotation.set(Math.PI/2, 0, 0);
avatar.position.set(0.5 * width/-2, -height/2 + 25 + 30, 0);
scene.add(avatar);

avatar.setAngularFactor(new THREE.Vector3( 0, 0, 0 )); //don't rotate
avatar.setLinearFactor(new THREE.Vector3( 1, 1, 0 )); //only move on X and Y axis

avatar.addEventListener('collision', function(object) {
  if (object.isGoal) gameOver();
});

document.addEventListener("keydown", function(event) {
  var code = event.keyCode;
  if (code == 37) move(-50); //left arrow
  if (code == 39) move(50); //right arrow
});

function move(x) {
  var v_y = avatar.getLinearVelocity().y,
      v_x = avatar.getLinearVelocity().x;
      
if (Math.abs(v_x + x) > 200) return;
avatar.setLinearVelocity(
  new THREE.Vector3(v_x + x, v_y + y, 0)
  );
}

var goal = new Physijs.ConvexMesh(
  new THREE.TorusGeometry(100, 25, 20, 30),
  Physijs.createMaterial(
    new THREE.MeshBasicMaterial({color:0x00bb00})
    ),
    0
);
goal.isGoal = true;

function placeGoal() {
  var x = 0,
  rand = Math.random();
if (rand < 0.33) x = width / -2;
if (rand > 0.66) x = width / 2;
goal.position.set(x, height/2, 0);
scene.add(goal);
}
placeGoal();
  // Animate motion in the game
  function animate() {
    requestAnimationFrame(animate);
    renderer.render(scene, camera);
  }
  animate();

  // Run physics
  function gameStep() {
    scene.simulate();
    // Update physics 60 times a second so that motion is smooth
    setTimeout(gameStep, 1000/60);
  }
  gameStep();
</script>
